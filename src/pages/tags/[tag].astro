---
// NOTE: THIS NEEDS TO BE INCLUDED IN THE /pages DIRECTORY TO BE RENDERED AUTOMATICALLY
// You can create new pages dynamically by exporting "getStaticPaths()" function
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import { getCollection } from "astro:content";

// export const getSomething = async () => {

// }

// DYNAMIC ROUTING: creating multiple pages from a single Astro file
// getStaticPaths should always return a list of objects with:
// params: what to call each page
// props: data to pass to those pages
export async function getStaticPaths() {
    // Pass list of all posts as props:
    // const allPosts = Object.values(
    //     import.meta.glob("../posts/*.md", { eager: true })
    // );
    const allPosts = await getCollection("blog");
    // What happens to "undefined"?
    // const Array.from(set)
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];
    // WARNING: LOOKS LIKE import.meta.glob NEEDS TO BE EXECUTED INSIDE getStaticPaths TO WORK CORRECTLY
    // This is because getStaticPaths executes at build time

    // Notice the parentheses around the object so that it's no considered a code block
    return uniqueTags.map((tagValue) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.include(tagValue)
        );
        return {
            params: { tag: tagValue },
            props: { posts: allPosts },
        };
    });
}

// You can access each one with /tags/[tag]
const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post: any) =>
//     post.frontmatter.tags?.includes(tag)
// );
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        {
            posts.map((post: any) => (
                <BlogPost url={`/posts/${post.id}`} title={post.data.title} />
            ))
        }
    </ul>
</BaseLayout>
